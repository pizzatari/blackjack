; -----------------------------------------------------------------------------
; SOUND DATA
; -----------------------------------------------------------------------------
; Variable length sound clip data: each note is 2 bytes
;  tempo:       1 byte
;  control:     1 byte
;                   bit 4-7:    iterations (initializer)
;                   bit 0-3:    loops (0 disables)
;  note * N:    2 bytes per note: [volume, control], [frequency]
;  terminator:  1 byte (0)
;
;  2 byte note:
;    byte 1: 0000 0000
;      bits: 4-7    volume
;      bits: 0-3    control
;    byte 2: xxx 00000
;      bits: 0-5    freqency
;

#if VIDEO_MODE == VIDEO_NTSC

SOUND_LOOPS_MASK        = %11110000
SOUND_CURR_NOTE_MASK    = %00001111
SOUND_LOOPS_POS         = 4

; Sound effect ID for the sound effect queue
SOUND_ID_NONE               = 0
SOUND_ID_ERROR              = 1
SOUND_ID_CHIRP              = 2
SOUND_ID_CARD_FLIP          = 3
SOUND_ID_CHIPS              = 4
SOUND_ID_HAND_OVER          = 5
SOUND_ID_SHUFFLE0           = 6
SOUND_ID_SHUFFLE1           = 7
SOUND_ID_PUSH               = 8
SOUND_ID_WIN0               = 9
SOUND_ID_WIN1               = 10
SOUND_ID_LOST               = 11
SOUND_ID_CRASH_LANDING      = 12
SOUND_ID_FLYING             = 13
;SOUND_ID_NO_CHIPS          = 14
;SOUND_ID_BANK_BROKE        = 15

SOUND_ID_NAVIGATE           = SOUND_ID_CHIRP
SOUND_ID_HIT                = SOUND_ID_CHIRP
SOUND_ID_STAND              = SOUND_ID_CHIRP
SOUND_ID_DOUBLEDOWN         = SOUND_ID_CHIRP
SOUND_ID_SURRENDER          = SOUND_ID_CHIRP
SOUND_ID_INSURANCE          = SOUND_ID_CHIRP
SOUND_ID_SPLIT              = SOUND_ID_CHIRP

; tempo mask
SoundTempo
    dc.b 0                      ; SOUND_ID_NONE
    dc.b %00000011              ; SOUND_ID_ERROR
    dc.b 0                      ; SOUND_ID_CHIRP
    dc.b 0                      ; SOUND_ID_CARD_FLIP
    dc.b 0                      ; SOUND_ID_CHIPS
    dc.b 0                      ; SOUND_ID_HAND_OVER
    dc.b %00000111              ; SOUND_ID_SHUFFLE0
    dc.b %00000001              ; SOUND_ID_SHUFFLE1
    dc.b %00000111              ; SOUND_ID_PUSH
    dc.b %00000111              ; SOUND_ID_WIN0
    dc.b %00000111              ; SOUND_ID_WIN1
    dc.b %00000111              ; SOUND_ID_LOST
    dc.b %00000111              ; SOUND_ID_CRASH_LANDING
    dc.b %00000111              ; SOUND_ID_FLYING

; number of loops
SoundLoops
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_NONE
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_ERROR
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_CHIRP
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_CARD_FLIP
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_CHIPS
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_HAND_OVER
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_SHUFFLE0
    dc.b  2 << SOUND_LOOPS_POS  ; SOUND_ID_SHUFFLE1
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_PUSH
    dc.b  3 << SOUND_LOOPS_POS  ; SOUND_ID_WIN0
    dc.b  3 << SOUND_LOOPS_POS  ; SOUND_ID_WIN1
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_LOST
    dc.b  4 << SOUND_LOOPS_POS  ; SOUND_ID_CRASH_LANDING
    dc.b  0 << SOUND_LOOPS_POS  ; SOUND_ID_FLYING

; starting note index
SoundNoteIdx
    dc.b 0                      ; SOUND_ID_NONE
    dc.b SoundErrorSize/2-2     ; SOUND_ID_ERROR
    dc.b SoundChirpSize/2-2     ; SOUND_ID_CHIRP
    dc.b SoundCardFlipSize/2-2  ; SOUND_ID_CARD_FLIP
    dc.b SoundChipsSize/2-2     ; SOUND_ID_CHIPS
    dc.b SoundHandOverSize/2-2  ; SOUND_ID_HAND_OVER
    dc.b SoundShuffle0Size/2-2  ; SOUND_ID_SHUFFLE0
    dc.b SoundShuffle1Size/2-2  ; SOUND_ID_SHUFFLE1
    dc.b SoundPushSize/2-2      ; SOUND_ID_PUSH
    dc.b SoundWin0Size/2-2      ; SOUND_ID_WIN0
    dc.b SoundWin1Size/2-2      ; SOUND_ID_WIN1
    dc.b SoundLostSize/2-2      ; SOUND_ID_LOST
    dc.b SoundCrashLandingSize/2-2; SOUND_ID_CRASH_LANDING
    dc.b SoundFlyingSize/2-2    ; SOUND_ID_FLYING

; note data pointeras
SoundTableLo
    dc.b 0                      ; SOUND_ID_NONE
    dc.b <SoundError            ; SOUND_ID_ERROR
    dc.b <SoundChirp            ; SOUND_ID_CHIRP
    dc.b <SoundCardFlip         ; SOUND_ID_CARD_FLIP
    dc.b <SoundChips            ; SOUND_ID_CHIPS
    dc.b <SoundHandOver         ; SOUND_ID_HAND_OVER
    dc.b <SoundShuffle0         ; SOUND_ID_SHUFFLE0
    dc.b <SoundShuffle1         ; SOUND_ID_SHUFFLE1
    dc.b <SoundPush             ; SOUND_ID_PUSH
    dc.b <SoundWin0             ; SOUND_ID_WIN0
    dc.b <SoundWin1             ; SOUND_ID_WIN1
    dc.b <SoundLost             ; SOUND_ID_LOST
    dc.b <SoundCrashLanding     ; SOUND_ID_CRASH_LANDING
    dc.b <SoundFlying           ; SOUND_ID_FLYING
SoundTableHi
    dc.b 0                      ; SOUND_ID_NONE
    dc.b >SoundError            ; SOUND_ID_ERROR
    dc.b >SoundChirp            ; SOUND_ID_CHIRP
    dc.b >SoundCardFlip         ; SOUND_ID_CARD_FLIP
    dc.b >SoundChips            ; SOUND_ID_CHIPS
    dc.b >SoundHandOver         ; SOUND_ID_HAND_OVER
    dc.b >SoundShuffle0         ; SOUND_ID_SHUFFLE0
    dc.b >SoundShuffle1         ; SOUND_ID_SHUFFLE1
    dc.b >SoundPush             ; SOUND_ID_PUSH
    dc.b >SoundWin0             ; SOUND_ID_WIN0
    dc.b >SoundWin1             ; SOUND_ID_WIN1
    dc.b >SoundLost             ; SOUND_ID_LOST
    dc.b >SoundCrashLanding     ; SOUND_ID_CRASH_LANDING
    dc.b >SoundFlying           ; SOUND_ID_FLYING

; notes are played in reverse order
SoundError
    dc.b $8c, 31        ; note 3    [AUDV, AUDC], AUDF
    dc.b $8c, 21        ; note 2    [AUDV, AUDC], AUDF
    dc.b $8c, 11        ; note 1    [AUDV, AUDC], AUDF
SoundErrorSize = . - SoundError

SoundChirp
    dc.b $85, 6
SoundChirpSize = . - SoundChirp

SoundCardFlip
    dc.b $1f, 10
    dc.b $2f, 14
    dc.b $5f, 20
    dc.b $5f, 14
    dc.b $8f, 20
    dc.b $5f, 14
    dc.b $5f, 20
    dc.b $2f, 14
    dc.b $1f, 20
SoundCardFlipSize = . - SoundCardFlip

SoundChips
    dc.b $2c, 1
    dc.b $15, 6
    dc.b $2c, 2
    dc.b $25, 10
    dc.b $2c, 4
    dc.b $45, 14
    dc.b $2c, 6
    dc.b $65, 18
    dc.b $2c, 8
    dc.b $85, 22
SoundChipsSize = . - SoundChips

SoundHandOver
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $81, 16
    dc.b $85, 6
SoundHandOverSize = . - SoundHandOver

SoundShuffle0
    dc.b $c8, 7
    dc.b $b8, 8
    dc.b $a8, 9
SoundShuffle0Size = . - SoundShuffle0

SoundShuffle1
    dc.b $c9, 8
    dc.b $b9, 10
    dc.b $a9, 12
    dc.b $99, 14
    dc.b $89, 16
    dc.b $79, 18
SoundShuffle1Size = . - SoundShuffle1

SoundPush
    dc.b $8d, 14
    dc.b $8d, 10
    dc.b $8d, 12
    dc.b $8d, 14
    dc.b $8d, 10
    dc.b $8d, 12
SoundPushSize = . - SoundPush

SoundWin0
    dc.b $85, 19
    dc.b $85, 11
    dc.b $85, 14
    dc.b $85, 19
    dc.b $85, 14
    dc.b $85, 17
    dc.b $85, 14
SoundWin0Size = . - SoundWin0

SoundWin1
    dc.b $85, 16
    dc.b $85, 15
    dc.b $85, 16
    dc.b $85, 15
    dc.b $85, 14
    dc.b $85, 22
SoundWin1Size = . - SoundWin1

SoundLost
    dc.b $47, 28
    dc.b $47, 28
    dc.b $47, 28
    dc.b $47, 28
    dc.b $57, 28
    dc.b $67, 28
    dc.b $01, 0 
    dc.b $87, 30
    dc.b $01, 0 
    dc.b $87, 25
    dc.b $01, 0 
    dc.b $a7, 20
SoundLostSize = . - SoundLost

SoundCrashLanding
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
    dc.b $88, 15
SoundCrashLandingSize = . - SoundCrashLanding

SoundFlying
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
    dc.b $a8, 8
SoundFlyingSize = . - SoundFlying

#endif

#if VIDEO_MODE == VIDEO_PAL
#endif
